{"version":3,"file":"index.mjs","sources":["../src/fetch.ts","../src/langfuse-node.ts"],"sourcesContent":["import axios from \"axios\";\nimport { type LangfuseFetchOptions, type LangfuseFetchResponse } from \"langfuse-core\";\n\n// NOTE: We use axios as a reliable, well supported request library but follow the Fetch API (roughly)\n// So that alternative implementations can be used if desired\nexport const fetch = async (url: string, options: LangfuseFetchOptions): Promise<LangfuseFetchResponse> => {\n  const res = await axios.request({\n    url,\n    headers: options.headers,\n    method: options.method.toLowerCase(),\n    data: options.body,\n    signal: options.signal,\n    // fetch only throws on network errors, not on HTTP errors\n    validateStatus: () => true,\n  });\n\n  return {\n    status: res.status,\n    text: async () => res.data,\n    json: async () => res.data,\n  };\n};\n","import { version } from \"../package.json\";\n\nimport {\n  // JsonType,\n  LangfuseCore,\n  type LangfuseFetchOptions,\n  type LangfuseFetchResponse,\n  type LangfusePersistedProperty,\n  LangfuseMemoryStorage,\n  utils,\n} from \"langfuse-core\";\nimport { type LangfuseOptions } from \"./types\";\nimport { fetch } from \"./fetch\";\n\n// Required when users pass these as typed arguments\nexport {\n  type LangfuseTraceClient,\n  type LangfuseSpanClient,\n  type LangfuseEventClient,\n  type LangfuseGenerationClient,\n} from \"langfuse-core\";\n\n// The actual exported Nodejs API.\nexport default class Langfuse extends LangfuseCore {\n  private _memoryStorage = new LangfuseMemoryStorage();\n\n  private options: LangfuseOptions;\n\n  constructor(params?: { publicKey?: string; secretKey?: string } & LangfuseOptions) {\n    const { publicKey, secretKey, ...options } = utils.configLangfuseSDK(params);\n    if (!secretKey) {\n      throw new Error(\"[Langfuse] secretKey is required for instantiation\");\n    }\n\n    if (!publicKey) {\n      throw new Error(\"[Langfuse] publicKey is required for instantiation\");\n    }\n\n    super({ publicKey, secretKey, ...options });\n\n    this.options = options;\n  }\n\n  getPersistedProperty(key: LangfusePersistedProperty): any | undefined {\n    return this._memoryStorage.getProperty(key);\n  }\n\n  setPersistedProperty(key: LangfusePersistedProperty, value: any | null): void {\n    return this._memoryStorage.setProperty(key, value);\n  }\n\n  fetch(url: string, options: LangfuseFetchOptions): Promise<LangfuseFetchResponse> {\n    return this.options.fetch ? this.options.fetch(url, options) : fetch(url, options);\n  }\n\n  getLibraryId(): string {\n    return \"langfuse-node\";\n  }\n  getLibraryVersion(): string {\n    return version;\n  }\n  getCustomUserAgent(): string {\n    return `langfuse-node/${version}`;\n  }\n}\n"],"names":["fetch","url","options","res","axios","request","headers","method","toLowerCase","data","body","signal","validateStatus","status","text","json","Langfuse","LangfuseCore","constructor","params","publicKey","secretKey","utils","configLangfuseSDK","Error","_memoryStorage","LangfuseMemoryStorage","getPersistedProperty","key","getProperty","setPersistedProperty","value","setProperty","getLibraryId","getLibraryVersion","version","getCustomUserAgent"],"mappings":";;;;;AAGA;AACA;AACO,MAAMA,KAAK,GAAG,OAAOC,GAAW,EAAEC,OAA6B,KAAoC;AACxG,EAAA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,OAAO,CAAC;IAC9BJ,GAAG;IACHK,OAAO,EAAEJ,OAAO,CAACI,OAAO;AACxBC,IAAAA,MAAM,EAAEL,OAAO,CAACK,MAAM,CAACC,WAAW,EAAE;IACpCC,IAAI,EAAEP,OAAO,CAACQ,IAAI;IAClBC,MAAM,EAAET,OAAO,CAACS,MAAM;AACtB;IACAC,cAAc,EAAEA,MAAM,IAAA;AACvB,GAAA,CAAC,CAAA;EAEF,OAAO;IACLC,MAAM,EAAEV,GAAG,CAACU,MAAM;AAClBC,IAAAA,IAAI,EAAE,YAAYX,GAAG,CAACM,IAAI;AAC1BM,IAAAA,IAAI,EAAE,YAAYZ,GAAG,CAACM,IAAAA;GACvB,CAAA;AACH,CAAC;;ACCD;AACqB,MAAAO,QAAS,SAAQC,YAAY,CAAA;EAKhDC,WAAAA,CAAYC,MAAqE,EAAA;IAC/E,MAAM;MAAEC,SAAS;MAAEC,SAAS;MAAE,GAAGnB,OAAAA;AAAS,KAAA,GAAGoB,KAAK,CAACC,iBAAiB,CAACJ,MAAM,CAAC,CAAA;IAC5E,IAAI,CAACE,SAAS,EAAE;AACd,MAAA,MAAM,IAAIG,KAAK,CAAC,oDAAoD,CAAC,CAAA;AACvE,KAAA;IAEA,IAAI,CAACJ,SAAS,EAAE;AACd,MAAA,MAAM,IAAII,KAAK,CAAC,oDAAoD,CAAC,CAAA;AACvE,KAAA;AAEA,IAAA,KAAK,CAAC;MAAEJ,SAAS;MAAEC,SAAS;MAAE,GAAGnB,OAAAA;AAAS,KAAA,CAAC,CAAA;AAdrC,IAAA,IAAA,CAAAuB,cAAc,GAAG,IAAIC,qBAAqB,EAAE,CAAA;IAgBlD,IAAI,CAACxB,OAAO,GAAGA,OAAO,CAAA;AACxB,GAAA;EAEAyB,oBAAoBA,CAACC,GAA8B,EAAA;AACjD,IAAA,OAAO,IAAI,CAACH,cAAc,CAACI,WAAW,CAACD,GAAG,CAAC,CAAA;AAC7C,GAAA;AAEAE,EAAAA,oBAAoBA,CAACF,GAA8B,EAAEG,KAAiB,EAAA;IACpE,OAAO,IAAI,CAACN,cAAc,CAACO,WAAW,CAACJ,GAAG,EAAEG,KAAK,CAAC,CAAA;AACpD,GAAA;AAEA/B,EAAAA,KAAKA,CAACC,GAAW,EAAEC,OAA6B,EAAA;IAC9C,OAAO,IAAI,CAACA,OAAO,CAACF,KAAK,GAAG,IAAI,CAACE,OAAO,CAACF,KAAK,CAACC,GAAG,EAAEC,OAAO,CAAC,GAAGF,KAAK,CAACC,GAAG,EAAEC,OAAO,CAAC,CAAA;AACpF,GAAA;AAEA+B,EAAAA,YAAYA,GAAA;AACV,IAAA,OAAO,eAAe,CAAA;AACxB,GAAA;AACAC,EAAAA,iBAAiBA,GAAA;AACf,IAAA,OAAOC,OAAO,CAAA;AAChB,GAAA;AACAC,EAAAA,kBAAkBA,GAAA;IAChB,OAAO,CAAA,cAAA,EAAiBD,OAAO,CAAE,CAAA,CAAA;AACnC,GAAA;AACD;;;;"}