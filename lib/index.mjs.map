{"version":3,"file":"index.mjs","sources":["../src/storage.ts","../src/langfuse.ts","../src/openai/LangfuseSingleton.ts","../src/openai/parseOpenAI.ts","../src/openai/utils.ts","../src/openai/traceMethod.ts","../src/openai/observeOpenAI.ts"],"sourcesContent":["import { type LangfuseOptions } from \"./types\";\n\nexport type LangfuseStorage = {\n  getItem: (key: string) => string | null | undefined;\n  setItem: (key: string, value: string) => void;\n  removeItem: (key: string) => void;\n  clear: () => void;\n  getAllKeys: () => readonly string[];\n};\n\n// Methods partially borrowed from quirksmode.org/js/cookies.html\nexport const cookieStore: LangfuseStorage = {\n  getItem(key) {\n    try {\n      const nameEQ = key + \"=\";\n      const ca = document.cookie.split(\";\");\n      for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == \" \") {\n          c = c.substring(1, c.length);\n        }\n        if (c.indexOf(nameEQ) === 0) {\n          return decodeURIComponent(c.substring(nameEQ.length, c.length));\n        }\n      }\n    } catch (err) {}\n    return null;\n  },\n\n  setItem(key: string, value: string) {\n    try {\n      const cdomain = \"\",\n        expires = \"\",\n        secure = \"\";\n\n      const new_cookie_val = key + \"=\" + encodeURIComponent(value) + expires + \"; path=/\" + cdomain + secure;\n      document.cookie = new_cookie_val;\n    } catch (err) {\n      return;\n    }\n  },\n\n  removeItem(name) {\n    try {\n      cookieStore.setItem(name, \"\");\n    } catch (err) {\n      return;\n    }\n  },\n  clear() {\n    document.cookie = \"\";\n  },\n  getAllKeys() {\n    const ca = document.cookie.split(\";\");\n    const keys = [];\n\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == \" \") {\n        c = c.substring(1, c.length);\n      }\n      keys.push(c.split(\"=\")[0]);\n    }\n\n    return keys;\n  },\n};\n\nconst createStorageLike = (store: any): LangfuseStorage => {\n  return {\n    getItem(key) {\n      return store.getItem(key);\n    },\n\n    setItem(key, value) {\n      store.setItem(key, value);\n    },\n\n    removeItem(key) {\n      store.removeItem(key);\n    },\n    clear() {\n      store.clear();\n    },\n    getAllKeys() {\n      const keys = [];\n      for (const key in localStorage) {\n        keys.push(key);\n      }\n      return keys;\n    },\n  };\n};\n\nconst checkStoreIsSupported = (storage: LangfuseStorage, key = \"__mplssupport__\"): boolean => {\n  if (!window) {\n    return false;\n  }\n  try {\n    const val = \"xyz\";\n    storage.setItem(key, val);\n    if (storage.getItem(key) !== val) {\n      return false;\n    }\n    storage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nlet localStore: LangfuseStorage | undefined = undefined;\nlet sessionStore: LangfuseStorage | undefined = undefined;\n\nconst createMemoryStorage = (): LangfuseStorage => {\n  const _cache: { [key: string]: any | undefined } = {};\n\n  const store: LangfuseStorage = {\n    getItem(key) {\n      return _cache[key];\n    },\n\n    setItem(key, value) {\n      _cache[key] = value !== null ? value : undefined;\n    },\n\n    removeItem(key) {\n      delete _cache[key];\n    },\n    clear() {\n      for (const key in _cache) {\n        delete _cache[key];\n      }\n    },\n    getAllKeys() {\n      const keys = [];\n      for (const key in _cache) {\n        keys.push(key);\n      }\n      return keys;\n    },\n  };\n  return store;\n};\n\nexport const getStorage = (type: LangfuseOptions[\"persistence\"], window: Window | undefined): LangfuseStorage => {\n  if (typeof window !== undefined && window) {\n    if (!localStorage) {\n      const _localStore = createStorageLike(window.localStorage);\n      localStore = checkStoreIsSupported(_localStore) ? _localStore : undefined;\n    }\n\n    if (!sessionStore) {\n      const _sessionStore = createStorageLike(window.sessionStorage);\n      sessionStore = checkStoreIsSupported(_sessionStore) ? _sessionStore : undefined;\n    }\n  }\n\n  switch (type) {\n    case \"cookie\":\n      return cookieStore || localStore || sessionStore || createMemoryStorage();\n    case \"localStorage\":\n      return localStore || sessionStore || createMemoryStorage();\n    case \"sessionStorage\":\n      return sessionStore || createMemoryStorage();\n    case \"memory\":\n      return createMemoryStorage();\n    default:\n      return createMemoryStorage();\n  }\n};\n","import {\n    LangfuseCore,\n    type LangfuseFetchOptions,\n    type LangfuseFetchResponse,\n    type LangfusePersistedProperty,\n    LangfuseWebStateless,\n    utils,\n} from \"langfuse-core\";\nimport { version } from \"../package.json\";\nimport { type LangfuseStorage, getStorage } from \"./storage\";\nimport { type LangfuseOptions } from \"./types\";\n// Required when users pass these as typed arguments\nexport {\n    type LangfuseEventClient,\n    type LangfuseGenerationClient, type LangfuseSpanClient, type LangfuseTraceClient\n} from \"langfuse-core\";\n\nexport class Langfuse extends LangfuseCore {\n    private _storage: LangfuseStorage;\n    private _storageCache: any;\n    private _storageKey: string;\n\n    constructor(params?: { publicKey?: string; secretKey?: string } & LangfuseOptions) {\n        const { publicKey, secretKey, ...options } = utils.configLangfuseSDK(params);\n        if (!secretKey) {\n            throw new Error(\"[Langfuse] secretKey is required for instantiation\");\n        }\n        if (!publicKey) {\n            throw new Error(\"[Langfuse] publicKey is required for instantiation\");\n        }\n\n        super({ publicKey, secretKey, ...options });\n\n        if (typeof window !== \"undefined\" && \"Deno\" in window === false) {\n            this._storageKey = params?.persistence_name ? `lf_${params.persistence_name}` : `lf_${publicKey}_langfuse`;\n            this._storage = getStorage(params?.persistence || \"localStorage\", window);\n        } else {\n            this._storageKey = `lf_${publicKey}_langfuse`;\n            this._storage = getStorage(\"memory\", undefined);\n        }\n    }\n\n    getPersistedProperty<T>(key: LangfusePersistedProperty): T | undefined {\n        if (!this._storageCache) {\n            this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n        }\n\n        return this._storageCache[key];\n    }\n\n    setPersistedProperty<T>(key: LangfusePersistedProperty, value: T | null): void {\n        if (!this._storageCache) {\n            this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n        }\n\n        if (value === null) {\n            delete this._storageCache[key];\n        } else {\n            this._storageCache[key] = value;\n        }\n\n        this._storage.setItem(this._storageKey, JSON.stringify(this._storageCache));\n    }\n\n    fetch(url: string, options: LangfuseFetchOptions): Promise<LangfuseFetchResponse> {\n        return fetch(url, options);\n    }\n\n    getLibraryId(): string {\n        return \"langfuse\";\n    }\n\n    getLibraryVersion(): string {\n        return version;\n    }\n\n    getCustomUserAgent(): void {\n        return;\n    }\n}\n\nexport class LangfuseWeb extends LangfuseWebStateless {\n    private _storage: LangfuseStorage;\n    private _storageCache: any;\n    private _storageKey: string;\n\n    constructor(params?: { publicKey?: string } & LangfuseOptions) {\n        const { publicKey, ...options } = utils.configLangfuseSDK(params, false);\n        if (!publicKey) {\n            throw new Error(\"[Langfuse] publicKey is required for instantiation\");\n        }\n\n        super({ publicKey, ...options });\n\n        if (typeof window !== \"undefined\") {\n            this._storageKey = params?.persistence_name ? `lf_${params.persistence_name}` : `lf_${publicKey}_langfuse`;\n            this._storage = getStorage(params?.persistence || \"localStorage\", window);\n        } else {\n            this._storageKey = `lf_${publicKey}_langfuse`;\n            this._storage = getStorage(\"memory\", undefined);\n        }\n    }\n\n    getPersistedProperty<T>(key: LangfusePersistedProperty): T | undefined {\n        if (!this._storageCache) {\n            this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n        }\n\n        return this._storageCache[key];\n    }\n\n    setPersistedProperty<T>(key: LangfusePersistedProperty, value: T | null): void {\n        if (!this._storageCache) {\n            this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || \"{}\") || {};\n        }\n\n        if (value === null) {\n            delete this._storageCache[key];\n        } else {\n            this._storageCache[key] = value;\n        }\n\n        this._storage.setItem(this._storageKey, JSON.stringify(this._storageCache));\n    }\n\n    fetch(url: string, options: LangfuseFetchOptions): Promise<LangfuseFetchResponse> {\n        return fetch(url, options);\n    }\n\n    getLibraryId(): string {\n        return \"langfuse-frontend\";\n    }\n\n    getLibraryVersion(): string {\n        return version;\n    }\n\n    getCustomUserAgent(): void {\n        return;\n    }\n}\n","import { Langfuse } from \"../langfuse\";\nimport type { LangfuseInitParams } from \"./types\";\n\n/**\n * Represents a singleton instance of the Langfuse client.\n */\nexport class LangfuseSingleton {\n  private static instance: Langfuse | null = null; // Lazy initialization\n\n  /**\n   * Returns the singleton instance of the Langfuse client.\n   * @param params Optional parameters for initializing the Langfuse instance. Only used for the first call.\n   * @returns The singleton instance of the Langfuse client.\n   */\n  public static getInstance(params?: LangfuseInitParams): Langfuse {\n    if (!LangfuseSingleton.instance) {\n      LangfuseSingleton.instance = new Langfuse(params);\n    }\n    return LangfuseSingleton.instance;\n  }\n}\n","import type OpenAI from \"openai\";\nimport type { Usage } from \"langfuse-core\";\n\ntype ParsedOpenAIArguments = {\n  model: string;\n  input: Record<string, any> | string;\n  modelParameters: Record<string, any>;\n};\n\nexport const parseInputArgs = (args: Record<string, any>): ParsedOpenAIArguments => {\n  let params: Record<string, any> = {};\n  params = {\n    frequency_penalty: args.frequency_penalty,\n    logit_bias: args.logit_bias,\n    logprobs: args.logprobs,\n    max_tokens: args.max_tokens,\n    n: args.n,\n    presence_penalty: args.presence_penalty,\n    seed: args.seed,\n    stop: args.stop,\n    stream: args.stream,\n    temperature: args.temperature,\n    top_p: args.top_p,\n    user: args.user,\n    response_format: args.response_format?.type,\n    top_logprobs: args.top_logprobs,\n  };\n\n  let input: Record<string, any> | string;\n  if (\"messages\" in args) {\n    input = {};\n    input.messages = args.messages;\n    if (\"function_call\" in args) {\n      input.function_call = args.function_call;\n    }\n    if (\"functions\" in args) {\n      input.functions = args.functions;\n    }\n    if (\"tools\" in args) {\n      input.tools = args.tools;\n    }\n\n    if (\"tool_choice\" in args) {\n      input.tool_choice = args.tool_choice;\n    }\n  } else {\n    input = args.prompt;\n  }\n\n  return {\n    model: args.model,\n    input: input,\n    modelParameters: params,\n  };\n};\n\nexport const parseCompletionOutput = (res: unknown): string => {\n  if (!(res instanceof Object && \"choices\" in res && Array.isArray(res.choices))) {\n    return \"\";\n  }\n\n  return \"message\" in res.choices[0] ? res.choices[0].message : res.choices[0].text ?? \"\";\n};\n\nexport const parseUsage = (res: unknown): Usage | undefined => {\n  if (hasCompletionUsage(res)) {\n    const { prompt_tokens, completion_tokens, total_tokens } = res.usage;\n\n    return {\n      promptTokens: prompt_tokens,\n      completionTokens: completion_tokens,\n      totalTokens: total_tokens,\n    };\n  }\n};\n\nexport const parseChunk = (rawChunk: unknown): string => {\n  const _chunk = rawChunk as OpenAI.ChatCompletionChunk | OpenAI.Completions.Completion;\n\n  try {\n    if (\"delta\" in _chunk?.choices[0]) {\n      return _chunk.choices[0].delta?.content || \"\";\n    }\n\n    if (\"text\" in _chunk?.choices[0]) {\n      return _chunk?.choices[0].text || \"\";\n    }\n  } catch (e) {}\n\n  return \"\";\n};\n\n// Type guard to check if an unknown object is a UsageResponse\nfunction hasCompletionUsage(obj: any): obj is { usage: OpenAI.CompletionUsage } {\n  return (\n    obj instanceof Object &&\n    \"usage\" in obj &&\n    obj.usage instanceof Object &&\n    typeof obj.usage.prompt_tokens === \"number\" &&\n    typeof obj.usage.completion_tokens === \"number\" &&\n    typeof obj.usage.total_tokens === \"number\"\n  );\n}\n","export const isAsyncIterable = (x: unknown): x is AsyncIterable<unknown> =>\n  x != null && typeof x === \"object\" && typeof (x as any)[Symbol.asyncIterator] === \"function\";\n","import type { LangfuseParent } from \"./types\";\n\nimport { LangfuseSingleton } from \"./LangfuseSingleton\";\nimport { parseChunk, parseCompletionOutput, parseInputArgs, parseUsage } from \"./parseOpenAI\";\nimport { isAsyncIterable } from \"./utils\";\nimport type { LangfuseConfig } from \"./types\";\n\ntype GenericMethod = (...args: unknown[]) => unknown;\n\nexport const withTracing = <T extends GenericMethod>(\n  tracedMethod: T,\n  config?: LangfuseConfig & Required<{ generationName: string }>\n): ((...args: Parameters<T>) => Promise<ReturnType<T>>) => {\n  return (...args) => wrapMethod(tracedMethod, config, ...args);\n};\n\nconst wrapMethod = async <T extends GenericMethod>(\n  tracedMethod: T,\n  config?: LangfuseConfig,\n  ...args: Parameters<T>\n): Promise<ReturnType<T> | any> => {\n  const { model, input, modelParameters } = parseInputArgs(args[0] ?? {});\n  let observationData = {\n    model,\n    input,\n    modelParameters,\n    name: config?.generationName,\n    startTime: new Date(),\n  };\n\n  let langfuseParent: LangfuseParent;\n  const hasUserProvidedParent = config && \"parent\" in config;\n\n  if (hasUserProvidedParent) {\n    langfuseParent = config.parent;\n    // @ts-expect-error\n    delete config.parent;\n    observationData = { ...config, ...observationData };\n  } else {\n    const langfuse = LangfuseSingleton.getInstance(config?.clientInitParams);\n    langfuseParent = langfuse.trace({\n      ...config,\n      ...observationData,\n      id: config?.traceId,\n      timestamp: observationData.startTime,\n    });\n  }\n\n  try {\n    const res = await tracedMethod(...args);\n\n    // Handle stream responses\n    if (isAsyncIterable(res)) {\n      async function* tracedOutputGenerator(): AsyncGenerator<unknown, void, unknown> {\n        const response = res;\n        const processedChunks: string[] = [];\n        let completionStartTime: Date | null = null;\n\n        for await (const rawChunk of response as AsyncIterable<unknown>) {\n          completionStartTime = completionStartTime ?? new Date();\n\n          const processedChunk = parseChunk(rawChunk);\n          processedChunks.push(processedChunk);\n\n          yield rawChunk;\n        }\n\n        const output = processedChunks.join(\"\");\n\n        langfuseParent.generation({\n          ...observationData,\n          output,\n          endTime: new Date(),\n          completionStartTime,\n        });\n\n        if (!hasUserProvidedParent) {\n          langfuseParent.update({ output });\n        }\n      }\n\n      return tracedOutputGenerator() as ReturnType<T>;\n    }\n\n    const output = parseCompletionOutput(res);\n    const usage = parseUsage(res);\n\n    langfuseParent.generation({\n      ...observationData,\n      output,\n      endTime: new Date(),\n      usage,\n    });\n\n    if (!hasUserProvidedParent) {\n      langfuseParent.update({ output });\n    }\n\n    return res;\n  } catch (error) {\n    langfuseParent.generation({\n      ...observationData,\n      endTime: new Date(),\n      statusMessage: String(error),\n      level: \"ERROR\",\n    });\n\n    throw error;\n  }\n};\n","import type { LangfuseCore } from \"langfuse-core\";\n\nimport { LangfuseSingleton } from \"./LangfuseSingleton\";\nimport { withTracing } from \"./traceMethod\";\nimport type { LangfuseConfig, LangfuseExtension } from \"./types\";\n\n/**\n * Wraps an OpenAI SDK object with Langfuse tracing. Function calls are extended with a tracer that logs detailed information about the call, including the method name,\n * input parameters, and output.\n * \n * @param {T} sdk - The OpenAI SDK object to be wrapped.\n * @param {LangfuseConfig} [langfuseConfig] - Optional configuration object for the wrapper.\n * @param {string} [langfuseConfig.traceName] - The name to use for tracing. If not provided, a default name based on the SDK's constructor name and the method name will be used.\n * @param {string} [langfuseConfig.sessionId] - Optional session ID for tracing.\n * @param {string} [langfuseConfig.userId] - Optional user ID for tracing.\n * @param {string} [langfuseConfig.release] - Optional release version for tracing.\n * @param {string} [langfuseConfig.version] - Optional version for tracing.\n * @param {string} [langfuseConfig.metadata] - Optional metadata for tracing.\n * @param {string} [langfuseConfig.tags] - Optional tags for tracing.\n * @returns {T} - A proxy of the original SDK object with methods wrapped for tracing.\n *\n * @example\n * const client = new OpenAI();\n * const res = observeOpenAI(client, { traceName: \"My.OpenAI.Chat.Trace\" }).chat.completions.create({\n *      messages: [{ role: \"system\", content: \"Say this is a test!\" }],\n        model: \"gpt-3.5-turbo\",\n        user: \"langfuse\",\n        max_tokens: 300\n * });\n * */\nexport const observeOpenAI = <SDKType extends object>(\n  sdk: SDKType,\n  langfuseConfig?: LangfuseConfig\n): SDKType & LangfuseExtension => {\n  return new Proxy(sdk, {\n    get(wrappedSdk, propKey, proxy) {\n      const originalProperty = wrappedSdk[propKey as keyof SDKType];\n\n      const defaultGenerationName = `${sdk.constructor?.name}.${propKey.toString()}`;\n      const generationName = langfuseConfig?.generationName ?? defaultGenerationName;\n      const config = { ...langfuseConfig, generationName };\n\n      // Add a flushAsync method to the OpenAI SDK that flushes the Langfuse client\n      if (propKey === \"flushAsync\") {\n        let langfuseClient: LangfuseCore;\n\n        // Flush the correct client depending on whether a parent client is provided\n        if (langfuseConfig && \"parent\" in langfuseConfig) {\n          langfuseClient = langfuseConfig.parent.client;\n        } else {\n          langfuseClient = LangfuseSingleton.getInstance();\n        }\n\n        return langfuseClient.flushAsync.bind(langfuseClient);\n      }\n\n      // Trace methods of the OpenAI SDK\n      if (typeof originalProperty === \"function\") {\n        return withTracing(originalProperty.bind(wrappedSdk), config);\n      }\n\n      const isNestedOpenAIObject =\n        originalProperty &&\n        !Array.isArray(originalProperty) &&\n        !(originalProperty instanceof Date) &&\n        typeof originalProperty === \"object\";\n\n      // Recursively wrap nested objects to ensure all nested properties or methods are also traced\n      if (isNestedOpenAIObject) {\n        return observeOpenAI(originalProperty, config);\n      }\n\n      // Fallback to returning the original value\n      return Reflect.get(wrappedSdk, propKey, proxy);\n    },\n  }) as SDKType & LangfuseExtension;\n};\n"],"names":["cookieStore","getItem","key","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","decodeURIComponent","err","setItem","value","cdomain","expires","secure","new_cookie_val","encodeURIComponent","removeItem","name","clear","getAllKeys","keys","push","createStorageLike","store","localStorage","checkStoreIsSupported","storage","window","val","localStore","undefined","sessionStore","createMemoryStorage","_cache","getStorage","type","_localStore","_sessionStore","sessionStorage","Langfuse","LangfuseCore","constructor","params","publicKey","secretKey","options","utils","configLangfuseSDK","Error","_storageKey","persistence_name","_storage","persistence","getPersistedProperty","_storageCache","JSON","parse","setPersistedProperty","stringify","fetch","url","getLibraryId","getLibraryVersion","version","getCustomUserAgent","LangfuseWeb","LangfuseWebStateless","LangfuseSingleton","getInstance","instance","parseInputArgs","args","frequency_penalty","logit_bias","logprobs","max_tokens","n","presence_penalty","seed","stop","stream","temperature","top_p","user","response_format","top_logprobs","input","messages","function_call","functions","tools","tool_choice","prompt","model","modelParameters","parseCompletionOutput","res","Object","Array","isArray","choices","message","text","parseUsage","hasCompletionUsage","prompt_tokens","completion_tokens","total_tokens","usage","promptTokens","completionTokens","totalTokens","parseChunk","rawChunk","_chunk","delta","content","e","obj","isAsyncIterable","x","Symbol","asyncIterator","withTracing","tracedMethod","config","wrapMethod","observationData","generationName","startTime","Date","langfuseParent","hasUserProvidedParent","parent","langfuse","clientInitParams","trace","id","traceId","timestamp","tracedOutputGenerator","response","processedChunks","completionStartTime","processedChunk","output","join","generation","endTime","update","error","statusMessage","String","level","observeOpenAI","sdk","langfuseConfig","Proxy","get","wrappedSdk","propKey","proxy","originalProperty","defaultGenerationName","toString","langfuseClient","client","flushAsync","bind","isNestedOpenAIObject","Reflect"],"mappings":"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"}